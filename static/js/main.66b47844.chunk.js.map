{"version":3,"sources":["useFetch.component.js","App.js","index.js"],"names":["useFetch","url","useState","loading","setLoading","data","setData","update","setUpdate","useEffect","jsonp","err","console","log","result","feed","entry","content","$t","updated","App","regexedKey","match","regexedDate","regexedUpdate","className","map","value","index","date","key","type","readOnly","onClick","element","document","querySelectorAll","btn","select","execCommand","innerHTML","setTimeout","copySerial","disabled","ReactDOM","render","getElementById"],"mappings":"4NA+BeA,EA5BE,SAACC,GAAS,IAAD,EACMC,oBAAS,GADf,mBACjBC,EADiB,KACRC,EADQ,OAEAF,mBAAS,IAFT,mBAEjBG,EAFiB,KAEXC,EAFW,OAGIJ,mBAAS,IAHb,mBAGjBK,EAHiB,KAGTC,EAHS,KAyBxB,OAJAC,qBAAU,WAfRC,IAAMT,EAAK,MAAM,SAACU,EAAKN,GACrB,GAAIM,EACFC,QAAQC,IAAIF,GACZP,GAAW,GACXE,EAAQ,0BACH,CACL,IAAMQ,EAAST,EAAKU,KAAKC,MAAM,GAAGC,QAAQC,GACpCX,EAASF,EAAKU,KAAKI,QAAQD,GACjCV,EAAUD,GACVD,EAAQQ,GACRV,GAAW,UASV,CAAED,UAASE,OAAME,WCyCXa,MAjEf,WAAgB,IAAD,EACqBpB,EAHxB,4DAGFG,EADK,EACLA,QAASE,EADJ,EACIA,KAAME,EADV,EACUA,OAInBc,EAAahB,EAAKiB,MAHL,gEAIbC,EAAclB,EAAKiB,MAHL,iCAIdE,EAAgBjB,EAAOe,MAHP,+BAgBpB,OACE,oCACE,uBAAGG,UAAU,SAAb,yBACA,uBAAGA,UAAU,YACVtB,EAAU,GAAK,eAAiBqB,GAEnC,6BAASC,UAAU,kBAChBtB,EACC,yBAAKsB,UAAU,SACb,0CAGFJ,EAAWK,KAAI,SAACC,EAAOC,GACrB,IAAMC,EAAON,EAAYK,GACzB,OACE,yBAAKE,IAAKF,EAAOH,UAAU,QACzB,2BACE,2BAAOA,UAAU,OAAjB,UACA,2BACEM,KAAK,OACLJ,MAAOA,EACPK,UAAQ,EACRP,UAAU,WAEZ,4BACEA,UAAU,MACVE,MAAM,OACNM,QAAS,kBAtCR,SAACL,GAClB,IAAMM,EAAUC,SAASC,iBAAiB,WACpCC,EAAMF,SAASC,iBAAiB,QACtCF,EAAQN,GAAOU,SACfH,SAASI,YAAY,QACrBF,EAAIT,GAAOY,UAAY,UACvBC,YAAW,WACTJ,EAAIT,GAAOY,UAAY,SACtB,KA8B4BE,CAAWd,KAH5B,SAQF,2BACE,2BAAOH,UAAU,OAAjB,QACA,2BAAOM,KAAK,OAAOJ,MAAOE,EAAMc,UAAQ,Y,MCrD1DC,IAASC,OACP,oCACE,kBAAC,EAAD,OAEFV,SAASW,eAAe,U","file":"static/js/main.66b47844.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport jsonp from 'jsonp';\n\nconst useFetch = (url) => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState('');\n  const [update, setUpdate] = useState('');\n\n  const getData = () => {\n    jsonp(url, null, (err, data) => {\n      if (err) {\n        console.log(err);\n        setLoading(false);\n        setData('there was an error');\n      } else {\n        const result = data.feed.entry[0].content.$t;\n        const update = data.feed.updated.$t;\n        setUpdate(update);\n        setData(result);\n        setLoading(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  });\n\n  return { loading, data, update };\n};\n\nexport default useFetch;\n","import React from 'react';\nimport useFetch from './useFetch.component';\nconst url = 'https://tnods1.blogspot.com/feeds/posts/default?alt=json';\n\nfunction App() {\n  const { loading, data, update } = useFetch(url);\n  const regexKey = /[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}/g;\n  const regexDate = /[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}/g;\n  const regexUpdate = /[0-9]{4}-[0-9]{2}-[0-9]{2}/g;\n  let regexedKey = data.match(regexKey);\n  let regexedDate = data.match(regexDate);\n  let regexedUpdate = update.match(regexUpdate);\n\n  const copySerial = (index) => {\n    const element = document.querySelectorAll('.serial');\n    const btn = document.querySelectorAll('.btn');\n    element[index].select();\n    document.execCommand('copy');\n    btn[index].innerHTML = 'copied!';\n    setTimeout(() => {\n      btn[index].innerHTML = 'copy';\n    }, 2000);\n  };\n\n  return (\n    <>\n      <p className='title'>Eset License Scrapper</p>\n      <p className='subtitle'>\n        {loading ? '' : 'last update ' + regexedUpdate}\n      </p>\n      <section className='grid-container'>\n        {loading ? (\n          <div className='modal'>\n            <p>Loading...</p>\n          </div>\n        ) : (\n          regexedKey.map((value, index) => {\n            const date = regexedDate[index];\n            return (\n              <div key={index} className='item'>\n                <p>\n                  <label className='pre'>Serial</label>\n                  <input\n                    type='text'\n                    value={value}\n                    readOnly\n                    className='serial'\n                  />\n                  <button\n                    className='btn'\n                    value='copy'\n                    onClick={() => copySerial(index)}\n                  >\n                    copy\n                  </button>\n                </p>\n                <p>\n                  <label className='pre'>Date</label>\n                  <input type='text' value={date} disabled />\n                </p>\n              </div>\n            );\n          })\n        )}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}